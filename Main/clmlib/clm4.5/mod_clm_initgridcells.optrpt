Global optimization report for : mod_clm_initgridcells._
=================================================================

Global optimization report for : mod_clm_initgridcells_mp_initgridcells_

LOOP BEGIN at mod_clm_initgridcells.F90 (154, 70)
    remark #15344: Loop was not vectorized: vector dependence prevents vectorization
    remark #15346: vector dependence: assumed FLOW dependence between (141:7) and nwtxy 
    remark #15346: vector dependence: assumed FLOW dependence between (141:7) and nwtxy 
    remark #15346: vector dependence: assumed FLOW dependence between (141:7) and nwtxy 
    remark #15346: vector dependence: assumed FLOW dependence between (141:7) and nwtxy 
    remark #15346: vector dependence: assumed FLOW dependence between (141:7) and nwtxy 
    remark #15346: vector dependence: assumed FLOW dependence between (141:7) and nwtxy 
    remark #15346: vector dependence: assumed FLOW dependence between (141:7) and nwtxy 
    remark #15346: vector dependence: assumed FLOW dependence between (141:7) and nwtxy 
    remark #15346: vector dependence: assumed FLOW dependence between (142:7) and nwtxy 
    remark #15346: vector dependence: assumed FLOW dependence between (142:7) and nwtxy 
LOOP END
=================================================================

Global optimization report for : mod_clm_initgridcells_mp_clm_ptrs_compdown_

LOOP BEGIN at mod_clm_initgridcells.F90 (239, 26)
    remark #15344: Loop was not vectorized: vector dependence prevents vectorization
    remark #15346: vector dependence: assumed FLOW dependence between (242:11) and clm3 (239:16) 
    remark #15346: vector dependence: assumed FLOW dependence between (242:11) and clm3 (239:16) 
    remark #15346: vector dependence: assumed FLOW dependence between (242:11) and clm3 (239:16) 
    remark #15346: vector dependence: assumed FLOW dependence between (242:11) and clm3 (239:16) 
    remark #15346: vector dependence: assumed FLOW dependence between (242:11) and clm3 (239:16) 
    remark #15346: vector dependence: assumed FLOW dependence between (245:9) and clm3 (239:16) 
    remark #15346: vector dependence: assumed OUTPUT dependence between (245:9) and (242:11) 
    remark #15346: vector dependence: assumed OUTPUT dependence between (245:9) and (242:11) 
    remark #15346: vector dependence: assumed OUTPUT dependence between (245:9) and (242:11) 
    remark #15346: vector dependence: assumed OUTPUT dependence between (245:9) and (242:11) 
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (274, 28)
    remark #15344: Loop was not vectorized: vector dependence prevents vectorization
    remark #15346: vector dependence: assumed FLOW dependence between (277:11) and (274:16) 
    remark #15346: vector dependence: assumed FLOW dependence between (277:11) and (274:16) 
    remark #15346: vector dependence: assumed FLOW dependence between (277:11) and (274:16) 
    remark #15346: vector dependence: assumed FLOW dependence between (277:11) and (274:16) 
    remark #15346: vector dependence: assumed FLOW dependence between (277:11) and (274:16) 
    remark #15346: vector dependence: assumed FLOW dependence between (280:9) and (274:16) 
    remark #15346: vector dependence: assumed OUTPUT dependence between (280:9) and (277:11) 
    remark #15346: vector dependence: assumed OUTPUT dependence between (280:9) and (277:11) 
    remark #15346: vector dependence: assumed OUTPUT dependence between (280:9) and (277:11) 
    remark #15346: vector dependence: assumed OUTPUT dependence between (280:9) and (277:11) 
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (298, 28)
    remark #15344: Loop was not vectorized: vector dependence prevents vectorization
    remark #15346: vector dependence: assumed FLOW dependence between (301:11) and (298:16) 
    remark #15346: vector dependence: assumed FLOW dependence between (301:11) and (298:16) 
    remark #15346: vector dependence: assumed FLOW dependence between (301:11) and (298:16) 
    remark #15346: vector dependence: assumed FLOW dependence between (301:11) and (298:16) 
    remark #15346: vector dependence: assumed FLOW dependence between (301:11) and (298:16) 
    remark #15346: vector dependence: assumed FLOW dependence between (301:11) and (298:16) 
    remark #15346: vector dependence: assumed FLOW dependence between (301:11) and (298:16) 
    remark #15346: vector dependence: assumed FLOW dependence between (301:11) and (298:16) 
    remark #15346: vector dependence: assumed FLOW dependence between (301:11) and (298:16) 
    remark #15346: vector dependence: assumed FLOW dependence between (301:11) and (298:16) 
LOOP END
=================================================================

Global optimization report for : mod_clm_initgridcells_mp_clm_ptrs_check_

LOOP BEGIN at mod_clm_initgridcells.F90 (338, 9)
    remark #25045: Fused Loops: 338,338
    remark #25583: Number of Array Refs Scalar Replaced In Loop: 1
    remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (338, 39)
    remark #25046: Loop lost in Fusion
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (339, 9)
    remark #25045: Fused Loops: 339,339
    remark #25583: Number of Array Refs Scalar Replaced In Loop: 1
    remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (339, 39)
    remark #25046: Loop lost in Fusion
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (340, 9)
    remark #25045: Fused Loops: 340,340
    remark #25583: Number of Array Refs Scalar Replaced In Loop: 1
    remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (340, 39)
    remark #25046: Loop lost in Fusion
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (341, 9)
    remark #25045: Fused Loops: 341,341
    remark #25583: Number of Array Refs Scalar Replaced In Loop: 1
    remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (341, 39)
    remark #25046: Loop lost in Fusion
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (342, 9)
    remark #25045: Fused Loops: 342,342
    remark #25583: Number of Array Refs Scalar Replaced In Loop: 1
    remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (342, 39)
    remark #25046: Loop lost in Fusion
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (343, 9)
    remark #25045: Fused Loops: 343,343
    remark #25583: Number of Array Refs Scalar Replaced In Loop: 1
    remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (343, 39)
    remark #25046: Loop lost in Fusion
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (347, 23)
    remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (347, 46)
    remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (348, 23)
    remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (348, 46)
    remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (349, 23)
    remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (349, 46)
    remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (350, 23)
    remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (350, 46)
    remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (351, 23)
    remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (351, 46)
    remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (352, 23)
    remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (352, 46)
    remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (358, 9)
    remark #25045: Fused Loops: 358,359
    remark #25583: Number of Array Refs Scalar Replaced In Loop: 1
    remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (359, 9)
    remark #25046: Loop lost in Fusion
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (360, 9)
    remark #25045: Fused Loops: 360,360
    remark #25583: Number of Array Refs Scalar Replaced In Loop: 1
    remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (360, 39)
    remark #25046: Loop lost in Fusion
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (361, 9)
    remark #25045: Fused Loops: 361,361
    remark #25583: Number of Array Refs Scalar Replaced In Loop: 1
    remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (361, 39)
    remark #25046: Loop lost in Fusion
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (362, 9)
    remark #25045: Fused Loops: 362,362
    remark #25583: Number of Array Refs Scalar Replaced In Loop: 1
    remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (362, 39)
    remark #25046: Loop lost in Fusion
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (363, 9)
    remark #25045: Fused Loops: 363,363
    remark #25583: Number of Array Refs Scalar Replaced In Loop: 1
    remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (363, 39)
    remark #25046: Loop lost in Fusion
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (371, 9)
    remark #25045: Fused Loops: 371,372
    remark #25583: Number of Array Refs Scalar Replaced In Loop: 1
    remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (372, 9)
    remark #25046: Loop lost in Fusion
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (373, 9)
    remark #25045: Fused Loops: 373,374
    remark #25583: Number of Array Refs Scalar Replaced In Loop: 1
    remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (374, 9)
    remark #25046: Loop lost in Fusion
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (375, 9)
    remark #25045: Fused Loops: 375,375
    remark #25583: Number of Array Refs Scalar Replaced In Loop: 1
    remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (375, 39)
    remark #25046: Loop lost in Fusion
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (376, 9)
    remark #25045: Fused Loops: 376,376
    remark #25583: Number of Array Refs Scalar Replaced In Loop: 1
    remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (376, 39)
    remark #25046: Loop lost in Fusion
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (384, 9)
    remark #25045: Fused Loops: 384,385
    remark #25583: Number of Array Refs Scalar Replaced In Loop: 1
    remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (385, 9)
    remark #25046: Loop lost in Fusion
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (386, 9)
    remark #25045: Fused Loops: 386,387
    remark #25583: Number of Array Refs Scalar Replaced In Loop: 1
    remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (387, 9)
    remark #25046: Loop lost in Fusion
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (388, 9)
    remark #25045: Fused Loops: 388,389
    remark #25583: Number of Array Refs Scalar Replaced In Loop: 1
    remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (389, 9)
    remark #25046: Loop lost in Fusion
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (404, 24)
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (418, 24)
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (431, 24)
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (443, 28)
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (454, 7)

    LOOP BEGIN at mod_clm_initgridcells.F90 (456, 9)

        LOOP BEGIN at mod_clm_initgridcells.F90 (459, 11)

            LOOP BEGIN at mod_clm_initgridcells.F90 (462, 34)
            LOOP END
        LOOP END
    LOOP END
LOOP END
=================================================================

Global optimization report for : mod_clm_initgridcells_mp_set_landunit_veg_compete_

LOOP BEGIN at mod_clm_initgridcells.F90 (550, 31)
<Predicate Optimized v1>
    remark #25423: Invariant If condition at line 550 hoisted out of this loop
    remark #15553: loop was not vectorized: outer loop is not an auto-vectorization candidate.

    LOOP BEGIN at mod_clm_initgridcells.F90 (554, 15)
    <Multiversioned v1>
        remark #25228: Loop multiversioned for Data Dependence
        remark #15344: Loop was not vectorized: vector dependence prevents vectorization
        remark #15346: vector dependence: assumed FLOW dependence between (556:19) and (556:43) 
        remark #15346: vector dependence: assumed FLOW dependence between (557:19) and (557:43) 
        remark #15346: vector dependence: assumed FLOW dependence between (559:19) and (559:41) 
    LOOP END
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (584, 31)
<Predicate Optimized v1>
    remark #25423: Invariant If condition at line 584 hoisted out of this loop
    remark #15553: loop was not vectorized: outer loop is not an auto-vectorization candidate.

    LOOP BEGIN at mod_clm_initgridcells.F90 (588, 15)
    <Multiversioned v1>
        remark #25228: Loop multiversioned for Data Dependence
        remark #15344: Loop was not vectorized: vector dependence prevents vectorization
        remark #15346: vector dependence: assumed FLOW dependence between (590:19) and (590:43) 
        remark #15346: vector dependence: assumed FLOW dependence between (591:19) and (591:43) 
        remark #15346: vector dependence: assumed FLOW dependence between (593:19) and (593:41) 
    LOOP END
LOOP END
=================================================================

Global optimization report for : mod_clm_initgridcells_mp_set_landunit_wet_ice_lake_
=================================================================

Global optimization report for : mod_clm_initgridcells_mp_set_landunit_crop_noncompete_

LOOP BEGIN at mod_clm_initgridcells.F90 (811, 9)
    remark #15344: Loop was not vectorized: vector dependence prevents vectorization
    remark #15346: vector dependence: assumed OUTPUT dependence between (787:13) and (786:13) 
    remark #15346: vector dependence: assumed OUTPUT dependence between (788:13) and (786:13) 
    remark #15346: vector dependence: assumed OUTPUT dependence between (788:13) and (787:13) 
    remark #15346: vector dependence: assumed OUTPUT dependence between (790:13) and (786:13) 
    remark #15346: vector dependence: assumed OUTPUT dependence between (790:13) and (787:13) 
    remark #15346: vector dependence: assumed OUTPUT dependence between (790:13) and (788:13) 
    remark #15346: vector dependence: assumed OUTPUT dependence between (791:13) and (786:13) 
    remark #15346: vector dependence: assumed OUTPUT dependence between (791:13) and (787:13) 
    remark #15346: vector dependence: assumed OUTPUT dependence between (791:13) and (788:13) 
    remark #15346: vector dependence: assumed OUTPUT dependence between (791:13) and (790:13) 
LOOP END

LOOP BEGIN at mod_clm_initgridcells.F90 (811, 9)
    remark #15344: Loop was not vectorized: vector dependence prevents vectorization
    remark #15346: vector dependence: assumed OUTPUT dependence between (787:13) and (786:13) 
    remark #15346: vector dependence: assumed OUTPUT dependence between (788:13) and (786:13) 
    remark #15346: vector dependence: assumed OUTPUT dependence between (788:13) and (787:13) 
    remark #15346: vector dependence: assumed OUTPUT dependence between (790:13) and (786:13) 
    remark #15346: vector dependence: assumed OUTPUT dependence between (790:13) and (787:13) 
    remark #15346: vector dependence: assumed OUTPUT dependence between (790:13) and (788:13) 
    remark #15346: vector dependence: assumed OUTPUT dependence between (791:13) and (786:13) 
    remark #15346: vector dependence: assumed OUTPUT dependence between (791:13) and (787:13) 
    remark #15346: vector dependence: assumed OUTPUT dependence between (791:13) and (788:13) 
    remark #15346: vector dependence: assumed OUTPUT dependence between (791:13) and (790:13) 
LOOP END
=================================================================

Global optimization report for : mod_clm_initgridcells_mp_set_landunit_urban_

LOOP BEGIN at mod_clm_initgridcells.F90 (904, 24)
    remark #15344: Loop was not vectorized: vector dependence prevents vectorization
    remark #15346: vector dependence: assumed OUTPUT dependence between ctype and ctype 
    remark #15346: vector dependence: assumed OUTPUT dependence between ctype and ctype 
    remark #15346: vector dependence: assumed OUTPUT dependence between ctype and ctype 
    remark #15346: vector dependence: assumed FLOW dependence between ctype and ctype (922:22) 
    remark #15346: vector dependence: assumed OUTPUT dependence between ctype and ctype (922:22) 
    remark #15346: vector dependence: assumed OUTPUT dependence between wtcol2lunit (906:33) and wtcol2lunit 
    remark #15346: vector dependence: assumed OUTPUT dependence between wtcol2lunit (906:33) and wtcol2lunit 
    remark #15346: vector dependence: assumed OUTPUT dependence between wtcol2lunit (906:33) and wtcol2lunit (920:62) 
    remark #15346: vector dependence: assumed FLOW dependence between wtcol2lunit (906:33) and wtcol2lunit (922:22) 
    remark #15346: vector dependence: assumed OUTPUT dependence between wtcol2lunit (906:33) and wtcol2lunit (922:22) 
LOOP END
=================================================================

---- Begin Inlining Report ----
Option Values:
  inline-threshold: 225
  inlinehint-threshold: 325
  inlinecold-threshold: 45
  inlineoptsize-threshold: 15

DEAD STATIC FUNC: llvm.memmove.p0.p0.i64

COMPILE FUNC: mod_clm_initgridcells_mp_set_landunit_wet_ice_lake_
   -> DELETE: llvm.memmove.p0.p0.i64 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (666,75)

COMPILE FUNC: mod_clm_initgridcells_mp_initgridcells_
   -> mod_clm_initgridcells_mp_set_landunit_veg_compete_ /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (94,12)
   -> mod_clm_initgridcells_mp_set_landunit_crop_noncompete_ /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (100,12)
   -> mod_clm_initgridcells_mp_set_landunit_urban_ /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (106,12)
   -> mod_clm_initgridcells_mp_set_landunit_urban_ /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (113,12)
   -> mod_clm_initgridcells_mp_set_landunit_urban_ /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (120,12)
   -> mod_clm_initgridcells_mp_set_landunit_wet_ice_lake_ /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (127,12)
   -> mod_clm_initgridcells_mp_set_landunit_wet_ice_lake_ /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (131,12)
   -> mod_clm_initgridcells_mp_set_landunit_wet_ice_lake_ /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (135,12)
   -> mod_clm_initgridcells_mp_clm_ptrs_compdown_ /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (176,10)
   -> mod_clm_initgridcells_mp_clm_ptrs_check_ /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (177,10)
   -> DELETE: llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (154,70)

COMPILE FUNC: mod_clm_initgridcells_mp_set_landunit_veg_compete_

COMPILE FUNC: mod_clm_initgridcells_mp_set_landunit_crop_noncompete_

COMPILE FUNC: mod_clm_initgridcells_mp_set_landunit_urban_
   -> DELETE: llvm.arithmetic.fence.f64 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (920,29)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (920,28)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (921,28)
   -> DELETE: llvm.arithmetic.fence.f64 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (922,22)
   -> DELETE: llvm.arithmetic.fence.f64 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (922,22)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (922,22)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (917,28)
   -> DELETE: llvm.arithmetic.fence.f64 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (914,28)
   -> llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (904,24)

COMPILE FUNC: mod_clm_initgridcells_mp_clm_ptrs_compdown_

COMPILE FUNC: mod_clm_initgridcells_mp_clm_ptrs_check_
   -> DELETE: llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (338,9)
   -> DELETE: llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (338,39)
   -> DELETE: llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (339,9)
   -> DELETE: llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (339,39)
   -> DELETE: llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (340,9)
   -> DELETE: llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (340,39)
   -> DELETE: llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (341,9)
   -> DELETE: llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (341,39)
   -> DELETE: llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (342,9)
   -> DELETE: llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (342,39)
   -> DELETE: llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (343,9)
   -> DELETE: llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (343,39)
   -> llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (347,23)
   -> llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (347,46)
   -> llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (348,23)
   -> llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (348,46)
   -> llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (349,23)
   -> llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (349,46)
   -> llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (350,23)
   -> llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (350,46)
   -> llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (351,23)
   -> llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (351,46)
   -> llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (352,23)
   -> llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (352,46)
   -> DELETE: llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (358,9)
   -> DELETE: llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (359,9)
   -> DELETE: llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (360,9)
   -> DELETE: llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (360,39)
   -> DELETE: llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (361,9)
   -> DELETE: llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (361,39)
   -> DELETE: llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (362,9)
   -> DELETE: llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (362,39)
   -> DELETE: llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (363,9)
   -> DELETE: llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (363,39)
   -> DELETE: llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (371,9)
   -> DELETE: llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (372,9)
   -> DELETE: llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (373,9)
   -> DELETE: llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (374,9)
   -> DELETE: llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (375,9)
   -> DELETE: llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (375,39)
   -> DELETE: llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (376,9)
   -> DELETE: llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (376,39)
   -> DELETE: llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (384,9)
   -> DELETE: llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (385,9)
   -> DELETE: llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (386,9)
   -> DELETE: llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (387,9)
   -> DELETE: llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (388,9)
   -> DELETE: llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (389,9)
   -> llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (338,9)
   -> llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (338,39)
   -> llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (339,9)
   -> llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (339,39)
   -> llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (340,9)
   -> llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (340,39)
   -> llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (341,9)
   -> llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (341,39)
   -> llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (342,9)
   -> llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (342,39)
   -> llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (343,9)
   -> llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (343,39)
   -> llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (358,9)
   -> llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (359,9)
   -> llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (360,9)
   -> llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (360,39)
   -> llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (361,9)
   -> llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (361,39)
   -> llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (362,9)
   -> llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (362,39)
   -> llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (363,9)
   -> llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (363,39)
   -> llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (371,9)
   -> llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (372,9)
   -> llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (373,9)
   -> llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (374,9)
   -> llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (375,9)
   -> llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (375,39)
   -> llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (376,9)
   -> llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (376,39)
   -> llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (384,9)
   -> llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (385,9)
   -> llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (386,9)
   -> llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (387,9)
   -> llvm.smin.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (388,9)
   -> llvm.smax.i32 /scratch_local/ifx0589433462EBv6J1/ifx0cc4vG.i90 (389,9)

COMPILE FUNC: mod_clm_initgridcells._

---- End Inlining Report ------
