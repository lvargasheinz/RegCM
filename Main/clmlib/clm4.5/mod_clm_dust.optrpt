Global optimization report for : mod_clm_dust._
=================================================================

Global optimization report for : mod_clm_dust_mp_dustemission_

LOOP BEGIN at mod_clm_dust.F90 (158, 5)
<Multiversioned v1>
    remark #25408: memset generated
    remark #25562: The loop has been multiversioned for the small trip count
LOOP END

LOOP BEGIN at mod_clm_dust.F90 (158, 5)
<Multiversioned v2>
    remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at mod_clm_dust.F90 (163, 5)
    remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at mod_clm_dust.F90 (165, 5)
    remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at mod_clm_dust.F90 (166, 5)
<Multiversioned v1>
    remark #25408: memset generated
    remark #25562: The loop has been multiversioned for the small trip count
LOOP END

LOOP BEGIN at mod_clm_dust.F90 (166, 5)
<Multiversioned v2>
    remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at mod_clm_dust.F90 (168, 46)
    remark #15344: Loop was not vectorized: vector dependence prevents vectorization
    remark #15346: vector dependence: assumed ANTI dependence between tlai_lu (172:9) and tlai_lu (171:33) 
    remark #15346: vector dependence: assumed OUTPUT dependence between tlai_lu (172:9) and tlai_lu (171:33) 
    remark #15346: vector dependence: assumed FLOW dependence between tlai_lu (172:9) and tlai_lu (172:9) 
    remark #15346: vector dependence: assumed FLOW dependence between sumwt (173:9) and sumwt (171:9) 
LOOP END

LOOP BEGIN at mod_clm_dust.F90 (178, 20)
    remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification 5.0
LOOP END

LOOP BEGIN at mod_clm_dust.F90 (194, 5)
    remark #25423: Invariant If condition at line 194 hoisted out of this loop
    remark #15553: loop was not vectorized: outer loop is not an auto-vectorization candidate.

    LOOP BEGIN at mod_clm_dust.F90 (194, 5)
        remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
    LOOP END
LOOP END

LOOP BEGIN at mod_clm_dust.F90 (195, 5)
    remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at mod_clm_dust.F90 (208, 33)
    remark #15344: Loop was not vectorized: vector dependence prevents vectorization
    remark #15346: vector dependence: assumed OUTPUT dependence between lnd_frc_mbl (214:9) and lnd_frc_mbl (216:9) 
LOOP END

LOOP BEGIN at mod_clm_dust.F90 (222, 34)
    remark #15527: Loop was not vectorized: function call to  cannot be vectorized
LOOP END

LOOP BEGIN at mod_clm_dust.F90 (241, 5)
    remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at mod_clm_dust.F90 (242, 5)
    remark #15553: loop was not vectorized: outer loop is not an auto-vectorization candidate.

    LOOP BEGIN at mod_clm_dust.F90 (246, 7)
        remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
    LOOP END
LOOP END

LOOP BEGIN at mod_clm_dust.F90 (257, 26)
    remark #15527: Loop was not vectorized: function call to  cannot be vectorized
LOOP END

LOOP BEGIN at mod_clm_dust.F90 (361, 5)
    remark #15553: loop was not vectorized: outer loop is not an auto-vectorization candidate.

    LOOP BEGIN at mod_clm_dust.F90 (362, 7)
        remark #15553: loop was not vectorized: outer loop is not an auto-vectorization candidate.

        LOOP BEGIN at mod_clm_dust.F90 (365, 30)
            remark #15344: Loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed FLOW dependence between (0:0) and (366:13) 
        LOOP END
    LOOP END
LOOP END

LOOP BEGIN at mod_clm_dust.F90 (376, 7)
    remark #15553: loop was not vectorized: outer loop is not an auto-vectorization candidate.

    LOOP BEGIN at mod_clm_dust.F90 (378, 28)
        remark #15344: Loop was not vectorized: vector dependence prevents vectorization
        remark #15346: vector dependence: assumed FLOW dependence between (379:11) and (379:11) 
        remark #15346: vector dependence: assumed FLOW dependence between (379:11) and (379:11) 
    LOOP END
LOOP END
=================================================================

Global optimization report for : mod_clm_dust_mp_dustdrydep_

LOOP BEGIN at mod_clm_dust.F90 (454, 11)
    remark #15553: loop was not vectorized: outer loop is not an auto-vectorization candidate.

    LOOP BEGIN at mod_clm_dust.F90 (473, 9)
        remark #15527: Loop was not vectorized: function call to  cannot be vectorized
    LOOP END
LOOP END

LOOP BEGIN at mod_clm_dust.F90 (492, 5)
    remark #15553: loop was not vectorized: outer loop is not an auto-vectorization candidate.

    LOOP BEGIN at mod_clm_dust.F90 (494, 13)
        remark #15527: Loop was not vectorized: function call to  cannot be vectorized
    LOOP END
LOOP END

LOOP BEGIN at mod_clm_dust.F90 (526, 7)
<Multiversioned v1>
    remark #25228: Loop multiversioned for Data Dependence
    remark #15553: loop was not vectorized: outer loop is not an auto-vectorization candidate.

    LOOP BEGIN at mod_clm_dust.F90 (527, 13)
        remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
    LOOP END
LOOP END

LOOP BEGIN at mod_clm_dust.F90 (536, 11)
<Multiversioned v1>
    remark #25228: Loop multiversioned for Data Dependence
    remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END
=================================================================

Global optimization report for : mod_clm_dust_mp_dustini_

LOOP BEGIN
    remark #15300: LOOP WAS VECTORIZED
    remark #15305: vectorization support: vector length 2
    remark #25436: Loop completely unrolled by 2
LOOP END

LOOP BEGIN at mod_clm_dust.F90 (667, 5)
    remark #15553: loop was not vectorized: outer loop is not an auto-vectorization candidate.

    LOOP BEGIN at mod_clm_dust.F90 (666, 7)
        remark #15527: Loop was not vectorized: function call to  cannot be vectorized
        remark #25583: Number of Array Refs Scalar Replaced In Loop: 1
    LOOP END
LOOP END

LOOP BEGIN at mod_clm_dust.F90 (697, 11)
    remark #15344: Loop was not vectorized: vector dependence prevents vectorization
    remark #15346: vector dependence: assumed FLOW dependence between (698:9) and (696:22) 
    remark #15346: vector dependence: assumed FLOW dependence between (698:9) and (697:26) 
LOOP END

LOOP BEGIN at mod_clm_dust.F90 (723, 7)
    remark #25529: Dead stores eliminated in loop
    remark #15527: Loop was not vectorized: function call to  cannot be vectorized
    remark #25583: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at mod_clm_dust.F90 (787, 5)
    remark #25529: Dead stores eliminated in loop
    remark #15553: loop was not vectorized: outer loop is not an auto-vectorization candidate.

    LOOP BEGIN at mod_clm_dust.F90 (753, 7)
        remark #15344: Loop was not vectorized: vector dependence prevents vectorization
        remark #15346: vector dependence: assumed FLOW dependence between sz_min (752:9) and sz_min (752:9) 
        remark #25583: Number of Array Refs Scalar Replaced In Loop: 1
    LOOP END

    LOOP BEGIN at mod_clm_dust.F90 (758, 7)
        remark #25045: Fused Loops: 758,765
        remark #25583: Number of Array Refs Scalar Replaced In Loop: 1
        remark #15527: Loop was not vectorized: function call to  cannot be vectorized
        remark #25583: Number of Array Refs Scalar Replaced In Loop: 1
    LOOP END

    LOOP BEGIN at mod_clm_dust.F90 (758, 7)
    <Peeled loop for fusion>
        remark #15527: Loop was not vectorized: function call to  cannot be vectorized
    LOOP END

    LOOP BEGIN at mod_clm_dust.F90 (765, 7)
        remark #25046: Loop lost in Fusion
    LOOP END

    LOOP BEGIN at mod_clm_dust.F90 (785, 7)
        remark #15344: Loop was not vectorized: vector dependence prevents vectorization
        remark #15346: vector dependence: assumed FLOW dependence between (778:33) and (778:33) 
        remark #15346: vector dependence: assumed FLOW dependence between (781:33) and (781:33) 
    LOOP END
LOOP END

LOOP BEGIN at mod_clm_dust.F90 (802, 5)
    remark #15527: Loop was not vectorized: function call to  cannot be vectorized
LOOP END

LOOP BEGIN at mod_clm_dust.F90 (828, 7)

    LOOP BEGIN at mod_clm_dust.F90 (828, 7)
        remark #15521: Loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
    LOOP END
LOOP END
=================================================================

---- Begin Inlining Report ----
Option Values:
  inline-threshold: 225
  inlinehint-threshold: 325
  inlinecold-threshold: 45
  inlineoptsize-threshold: 15

COMPILE FUNC: mod_clm_dust_mp_dustemission_
   -> llvm.smax.i32 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (50,14)
   -> DELETE: for_deallocate_handle /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (50,14)
   -> DELETE: for_deallocate_handle /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (50,14)
   -> llvm.smax.i32 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (50,14)
   -> DELETE: for_deallocate_handle /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (50,14)
   -> DELETE: for_deallocate_handle /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (50,14)
   -> DELETE: for_deallocate_handle /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (50,14)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (210,39)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (214,44)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (279,42)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (279,31)
   -> llvm.pow.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (279,64)
   -> llvm.sqrt.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (278,29)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (288,36)
   -> llvm.sqrt.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (296,34)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (326,58)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (327,17)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (327,43)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (345,39)
   -> llvm.exp.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (345,17)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (274,15)
   -> llvm.memset.p0.i64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (50,14)
   -> llvm.memset.p0.i64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (50,14)
   -> llvm.memset.p0.i64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (50,14)
   -> llvm.memset.p0.i64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (50,14)
   -> llvm.memset.p0.i64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (50,14)
   -> llvm.memset.p0.i64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (158,5)
   -> llvm.memset.p0.i64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (166,5)

COMPILE FUNC: mod_clm_dust_mp_dustdrydep_
   -> llvm.smax.i64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (398,14)
   -> DELETE: for_deallocate_handle /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (398,14)
   -> DELETE: for_deallocate_handle /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (398,14)
   -> DELETE: for_deallocate_handle /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (398,14)
   -> DELETE: for_deallocate_handle /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (398,14)
   -> DELETE: for_deallocate_handle /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (398,14)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (475,37)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (475,17)
   -> llvm.exp.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (480,40)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (480,22)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (484,27)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (466,42)
   -> llvm.pow.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (466,62)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (466,41)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (467,17)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (469,44)
   -> llvm.sqrt.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (469,30)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (469,17)
   -> llvm.pow.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (514,26)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (514,53)
   -> llvm.pow.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (514,50)
   -> DELETE: llvm.pow.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (516,26)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (518,37)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (498,53)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (500,16)
   -> llvm.memset.p0.i64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (398,14)
   -> llvm.memset.p0.i64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (398,14)
   -> llvm.memset.p0.i64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (398,14)
   -> llvm.memset.p0.i64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (398,14)
   -> llvm.memset.p0.i64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (398,14)

COMPILE FUNC: mod_clm_dust._

COMPILE FUNC: mod_clm_dust_mp_dustini_
   -> llvm.fabs.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (639,9)
   -> DELETE: llvm.log.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (659,37)
   -> DELETE: llvm.log.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (661,27)
   -> DELETE: llvm.log.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (662,27)
   -> DELETE: erf /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (663,38)
   -> DELETE: erf /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (664,38)
   -> DELETE: llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (663,38)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (672,56)
   -> llvm.pow.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (672,78)
   -> llvm.pow.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (679,39)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (679,16)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (683,32)
   -> llvm.exp.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (683,15)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (688,57)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (688,39)
   -> llvm.sqrt.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (690,12)
   -> DELETE: llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (721,33)
   -> DELETE: llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (749,23)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (749,48)
   -> DELETE: llvm.pow.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (749,45)
   -> DELETE: llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (763,32)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (767,39)
   -> DELETE: llvm.log.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (774,15)
   -> DELETE: llvm.exp.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (775,40)
   -> DELETE: __powr8i8 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (779,42)
   -> DELETE: llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (779,33)
   -> DELETE: __powr8i8 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (782,42)
   -> DELETE: llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (782,33)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (792,30)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (796,35)
   -> llvm.pow.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (796,55)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (796,34)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (797,11)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (799,37)
   -> llvm.sqrt.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (799,23)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (799,11)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (804,55)
   -> llvm.exp.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (804,30)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (804,12)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (806,21)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (844,29)
   -> llvm.pow.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (845,50)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (845,17)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (839,29)
   -> llvm.log.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (842,17)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (840,19)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (859,15)
   -> llvm.sqrt.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (858,22)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (860,24)
   -> llvm.fabs.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (860,19)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (861,21)
   -> llvm.log.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (659,37)
   -> llvm.log.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (661,27)
   -> llvm.log.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (662,27)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (663,38)
   -> DELETE: llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (721,33)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (749,23)
   -> llvm.pow.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (749,45)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (763,32)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (763,32)
   -> llvm.log.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (774,15)
   -> llvm.exp.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (775,40)
   -> llvm.arithmetic.fence.f64 /scratch_local/ifx2070983549lECkzJ/ifx5dRhJe.i90 (779,33)

---- End Inlining Report ------
